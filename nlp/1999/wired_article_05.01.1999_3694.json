{"URL": "https://www.wired.com/1999/05/open-source-2", "heading": "open season", "subheading": "why an industry of cutthroat competition is suddenly deciding good karma is great business. the standing-room-only crowd at the stanford university faculty club is getting antsy. for the second or third time, the moderator has skipped over linus torvalds, preferring to address his questions about open-source business models to other members of the panel. the [\u2026]", "author": "andrew leonard", "category": "not found", "type": "article", "timestamp": "05.01.1999 12:00 PM", "text": "why an industry of cutthroat competition is suddenly deciding good karma is great business. the standing-room-only crowd at the stanford university faculty club is getting antsy. for the second or third time, the moderator has skipped over linus torvalds, preferring to address his questions about open-source business models to other members of the panel. the audience is interested in what the other participants have to say - they are, after all, the up-and-coming stars of open source - but not at the expense of a chance to hear linus, the man himself, creator of the kernel of the linux operating system, declaim on the future.the audience is split between scruffy fanboys eager to cheer every anti-microsoft riposte and nattily dressed stanford students itching to break out of academia and into a high-flying start-up. it is not the kind of audience that will sit idly by as its desires are ignored. but before the grumbling can erupt into a full-scale riot, torvalds interrupts the moderator. \"i've got a business model too,\" he says with an impish grin. \"after this talk, i'm going to pass my hat around.\"wild laughter ensues. linus torvalds is at that stage of fame and popularity at which every joke he tells is considered hysterical and every pronouncement he delivers is treated as profound. but there's a nugget of real humor to be mined from his quip. the concept of a business model for open-source software is a contradictory feat of legerdemain. the term open source, after all, refers to a model of software development in which the underlying code to a program - the source code, aka the \"crown jewels\" - is by definition made freely available to the general public for modification, alteration, and endless redistribution. no wonder the venture capitalists are confused - where's the profit in free software?the answer lies somewhere at the intersection between bold new businesses delivering startlingly good software to market and the evolving economy of code. at the faculty club, it's the titillating possibilities of the former - in addition to torvalds' presence - that has packed the hall. the panel is stocked with articulate representatives of the still fledgling, but quite vibrant, open-source start-up community. a programmer from red hat software, the north carolina-based company that is the leading packager of commercial linux distributions, sits next to the ceo of sendmail inc., a start-up aiming to sell commercial \"enhancements\" of a venerable open-source program that still, after 18 years, moves the bulk of the internet's email.va research, which sells computers preloaded with linux - and has received a dose of venture capital from sequoia capital, the same company that steered yahoo! to its current $36 billion market valuation - is present, as is cygnus software, an open-source services and support company that reports raking in revenue of $20 million in 1998. piddling by microsoft's standards, but for open-source business fans, a sure sign of many billions yet to come. these companies and many more are ferreting out niche markets that exploit the robust, high-quality software built collectively by the faithful. the code might be free, but such side benefits as tech support, packaging, installation software, regular upgrades, linux-based office applications, and linux-friendly hardware are not. there's money to be made in open-source software - you just need to know where to look.the faculty club panel even includes a token venture capitalist, who makes gruff remarks about not wanting to see business plans with the words marx or manifesto in them - proof that despite the steadily improving profile of open-source software in the business community, the movement still hasn't shrugged off all the messy connotations of that most dangerous of words: free.by spring of 1999, open-source mania has transfixed the computing industry. gold rush fever, never hard to unleash in today's overheated high tech economy, is on the rise again. ibm has endorsed open-source web-server software called apache and has committed to providing support for linux. intel is investing in red hat, corel has a linux version of wordperfect, and scores of other tech stalwarts are announcing some level of support for open-source systems. hardly a day goes by without another company declaring that it is now \"going open source.\"never mind that some of these open-source-come-latelies may be trying to cover up for some misbegotten product that would never have had a prayer in the marketplace, or that they may well be aiming to exploit open-source resources without giving anything back in return. those two little words - open source - have become a magical incantation, like portal in 1998 or push in 1997. just whisper them and all will be yours: media attention, consumer interest, and, of course, venture capital.but is there really a jackpot waiting at the end of the open-source rainbow? or is that even the correct question to ask? as the high tech competitive landscape becomes ever more brutal - as product cycles speed up, consumers become more discerning, and international pressure intensifies - the tactic of going open source may best be envisioned as a necessity, not a business plan. a necessity because you must go open source to get access to the benefits of the open-source development community - the near-instantaneous bug fixes, the distributed intellectual human resources of the net, the increasingly large open-source code base. as open-source momentum continues to grow, the code itself will become a commodity - available to all, for next-to-nothing prices, like water or wheat.in this world to come, open-source software may be better thought of as a tool for stripping down company operations to lean, mean levels of efficiency than as a revenue generator in and of itself. certainly, start-ups like red hat and va research may be dreaming of (and planning for) their open-source ipos, but on a grander scale, larger, more established businesses will focus instead on discovering what their enterprises can best outsource to open source. what can the open-source development community take care of better than my company can do on its own? and what do i do best?there's never been a more cost-effective way to contract out services than to use this type of free labor (minus one's own contributions to the general welfare). and it never could have happened without the fertile conjunction of the internet with the particular form of cooperative behavior exemplified by open-source software.this should come as no surprise. hackers working in the tradition of free software built the internet. the net, in turn, encourages and facilitates collaboration on ever more complex projects. it's a bootstrapping feedback loop that shows no signs of weakening. if anything, it is gaining speed, fueled by both the pragmatic benefits of the system and a growing cultural consciousness that sharing information works.imagine the open-source development environment as a vast, open-to-all-comers laboratory stocked with every imaginable tool, including an infinitely large library and seamless communication conduits to talented colleagues all over the world. there is no entrance fee to this laboratory, no need to pay exorbitant license charges simply to use a particular tool, and no limit to the possibilities. all you need to do is find a likely niche and take advantage of the resources of the laboratory to leverage your creativity and talent - or to rev up the throttle on your already established business.take, for instance, what might happen if a particular tool doesn't exist and no single individual or small company has the time or resources to create it. in a dynamic open-source environment, alliances of enterprises and individuals with similar needs can easily coalesce around open-source project nodes to collectively address any given problem.the example offered by the apache project's work on web servers underscores the validity of this model. the apache group includes several programmers who work for companies - covalent technologies, the internet movie database, organic online, and ibm - that for one reason or another find it useful to have access to a cheap and powerful program that transforms ordinary computers into workstations capable of handling immensely stressful loads of web traffic. these companies are not in the business of actually developing or selling web servers - they are in the business of using them. management is enlightened enough to encourage employees to devote time and energy to the apache project - for free - because they understand the long-range benefits that will accrue.apache works. it's the web-server program of choice for more than half of all publicly accessible web servers - a statistic that is all the more amazing because web servers are a market niche laser-targeted by both microsoft and netscape. the apache project has proven that a rock-solid, commercial-quality software program can be created collectively by taking advantage of the flexibility of the open-source development model.the software industry built on these principles may well become a dizzying blur of kaleidoscopic frenzy, populated by thousands of hustling enterprises endlessly reforming and recombining into new apache group-like networks and fresh alliances. and all the while, the common body of available open-source code will grow steadily, which in turn will encourage more businesses to take advantage of it.of course, potential investors have every right to be skeptical of open-source-oriented business plans. and those who echo linus torvalds' joking \"world domination\" call to arms may do themselves more harm than good through their unbridled optimism. open source is no panacea, and it is has some very obvious shortcomings. most open-source software, for instance, is written by hackers aching to \"scratch their itch\" - to solve some particular problem unique to their own circumstances. it is far from clear that itch-scratching will lead to user-friendly interfaces that can match the sophistication of microsoft windows or the macintosh os. will an open-source project produce an interactive help system useful to computer illiterates? no one really knows.nor does anyone have a good answer for how a small open-source company with limited resources will defend itself against such treacherous pitfalls as patent and product liability suits. or what happens if, for example, linus torvalds wearies of overseeing the linux development process. who will make the ultimate decision on what software patch is incorporated into the all-important linux kernel? and how exactly will the open-source \"community\" enforce the \"give back what you create\" open-source licensing terms?there's never been a more cost-effective way to contract out services than to use this type of free labor.moreover, there are plenty of situations in which releasing source code plainly doesn't make good economic sense. in the case of extremely high-value-added programming projects, such as advanced digital-imaging software employed in life-or-death medical procedures, keeping control of one's intellectual property can be enormously lucrative.but questions such as whether linux can wrest control of the consumer desktop from microsoft, or whether joe user has any interest in mucking about with source code, miss the deeper, essential revelation delivered by the open-source phenomenon - the decentralization of talent and of economic power. code as commodity, widespread access to tools and infrastructure, institutionalized collaboration via the net - all these factors allow the individual or enterprise to shed unnecessary baggage that drags against entrepreneurial acceleration.the combination of good software and messianic faith - the internet's fabled \"gift economy\" - that spawned the technocultural phenomenon of free software in the '80s has today morphed into both a business strategy and a way of life. in the mid-'90s, the explosion of commerce and mainstream attention that overwhelmed the net obscured the workings of the gift economy; some observers even pronounced it dead - a nice experiment while it lasted, but not the kind of robust business model that could scale up to take into account the needs of hundreds of millions of users. but open source is now giving the skeptics pause. not only are open-source programs still the bedrock of the internet's infrastructure, they are also integral to the operation of huge web sites like yahoo! and amazon, and are increasingly popular for deployment in mission-critical corporate computing tasks.the emergence of the open-source apache web server program as the market leader in april 1996, netscape's decision in early 1998 to release the source code to the navigator web browser, and, all along, the steadily rising profile of linux have sent shock waves rippling through the commercial-software marketplace. the gift economy suddenly appears to be stronger than ever.if linus torvalds had, after all, passed around his hat at the stanford faculty club that evening, it would no doubt have returned filled with cash - or, even more likely, with multiple job offers. he needs neither, of course - that's one reason the joke was funny. but he would have been rewarded anyway, because what he has contributed for free has such immense value. he, and all the rest of the open-source hackers, have proven that software entrepreneurs don't have to spend their lives guarding the crown jewels against the depredations of interlopers. they can give their treasures away, and succeed.pluslinux on the marchapache ascendantthis lan is your lantour de sourcesuggested reading"}