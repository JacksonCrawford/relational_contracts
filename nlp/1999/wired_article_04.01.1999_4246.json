{"URL": "https://www.wired.com/1999/04/crypto", "heading": "the open secret", "subheading": "public key cryptography \u2013 the breakthrough that revolutionized email and ecommerce \u2013 was first discovered by american geeks. right? wrong. the story of the invention of public key cryptography is a cypherpunk sacred text: in 1976, an iconoclastic young hacker named whitfield diffie hooked up with stanford professor martin hellman, and together they devised what [\u2026]", "author": "steven levy", "category": "not found", "type": "article", "timestamp": "04.01.1999 12:00 PM", "text": "public key cryptography - the breakthrough that revolutionized email and ecommerce - was first discovered by american geeks. right? wrong. the story of the invention of public key cryptography is a cypherpunk sacred text: in 1976, an iconoclastic young hacker named whitfield diffie hooked up with stanford professor martin hellman, and together they devised what experts hailed as the most important development in crypto since the invention of polyalphabetic ciphers during the renaissance. the duo produced a system that allowed an unlimited number of people to communicate with total privacy.a year later, three mit mathematicians implemented the diffie-hellman theory, developing the landmark rsa algorithm, the mathematical formula that made public key feasible. published in a landmark mit paper and hailed by scientific american, these capabilities would turn out to be a vital step in making network communications secure, and became a bulwark for personal privacy as the internet grew.like a lot of mythic accounts, this one turns out to be well off the mark. the problem lies not in its veracity, but in what the story leaves out. in fact, the situation is a little like a hollywood remake of a foreign cult film. in this case, though, no one knew the earlier version existed - that the plot had been changed and characters replaced - because it was never released and the negatives were buried. the truth has emerged only because the surviving stars recently got permission from their \"studio\" to talk.james ellis, a british spook, hit upon the secret of public key crypto in the late '60s - but couldn't tell anyone.so roll back the time frame to a few years before the diffie-hellman/rsa saga. change the setting from mit and stanford, places where you can nearly get sunburned from the heat of new ideas, to a cloistered british intelligence agency in the sleepy cotswolds city of cheltenham, about 100 miles from london. instead of the famil- iar cast - a dashing hacker, his academic collaborator, a tight-knit team of mathematics researchers - imagine three nearly anonymous british civil servants laboring in the kind of obscurity possible only in the intelligence community's shadow world.one of the three - an engineer, not a mathematician - has been given what looks like a sidetrack assignment to solve a problem no one thinks can be solved. mulling it over while in his pajamas one night, he has a startling insight, but he's not sure his math skills are strong enough to unravel its implications. enter two cambridge university math grads who have quit advanced-degree programs and come to work in the world of spooks because - well, because they need a job. friendly rivals since they were schoolboys, they're fellow lodgers who, ruminating in their off hours, separately happen upon algorithms that would make the engineer's idea fly (the same algorithms published to astonishment and acclaim by the americans a few years later). then, after their agency tries and fails to knock down their work, it decides to sit on the findings and stay on the sidelines - even when the american discovery of public key touches off a cryptographic and commercial revolution.during the late '60s, intelligence agencies were giving much thought to the fast-breaking developments in computers and wireless technologies, and to ways to protect government data that traveled over these channels. while encryption hardware was evolving, one crucial part of the process hadn't changed since world war i: the need to distribute and use digital keys to scramble and unscramble messages. the process was a bottleneck. to ensure security, a unique key had to be generated for every pair of people who needed to conduct secret conversations; then those keys had to be delivered securely. thousands of people were in the classified loop, and that meant generating millions of keys that needed to be protected. managing the system was, to put it in a very un-british way, a bitch.at the uk's government communications headquarters - a government spy bureau that is the rough equivalent of the us national security agency - senior scientist james ellis was working on the problem. ellis, an orphan who had been raised by his grandparents in london's east end, had joined the gchq in the '50s, then left for a time to work (presumably on security issues) at the post office. by 1969, in his 40s, ellis was back at the gchq and, as part of its communications-electronics security group, was hunting for a way past the seemingly intractable conundrum of key management. it is difficult to peer into the office politics of his world, and doubly so at a distance of 30 years. still, it's clear that this assignment placed him neither at the white-hot center of international intrigue nor at the forefront of research. \"i think he was sort of sidetracked,\" a colleague says.ellis had his doubts about finding a solution to the problem. \"it was obvious to everyone, including me,\" he later wrote, \"that no secure communication was possible without a secret key, some other secret knowledge, or at least some way in which the recipient was in a different position from an interceptor. after all, if they were in identical situations, how could one possibly be able to receive what the other could not? thus there was no incentive to look for something so clearly impossible.\"but then ellis came across a paper buried in the gchq's mountain of secret material. written by an anonymous author, it described a project conceived by bell telephone toward the end of world war ii. the scheme, labeled project c43, was an ingenious method of analog voice scrambling that worked by the use of distortion.to conceptualize it, imagine you want to send a message over the phone line and you suspect someone is listening. how can you keep the message secure? the bell scientist suggested that the person receiving the message simply add noise to the line. when the message arrives, message and noise are intermingled and eavesdroppers will hear only garbage. the recipient, knowing precisely how the noise was added, can subtract it from the transmission and wind up with the original, unscrambled message.at gchq, disproving ellis's heretical thesis would be striking a blow for the natural order.for modern cryptography, project c43 was useless. for one thing, it was an analog model, and by the late '60s the world was going digital. but ellis found it exciting nevertheless: the sender of a message didn't have to worry about an enemy listening in, even if the foe knew how the system worked. what made this possible was that, in contrast to conventional cryptography, the recipient is a collaborator in the encryption. \"secure communication,\" ellis wrote, \"was, at least, theoretically possible if the recipient took part in the encipherment.\"that raised a tantalizing question for ellis: could a secure, digitally encrypted message be sent without keys being exchanged in advance? this heretical idea popped into his head one night after he had gone to bed. sitting in the dark in his cheltenham bedroom, he decided it could, and he came up with an existence proof for the question. his name for it would embody the contradiction: nonsecret encryption.it worked by taking the digitized, nonsecret exchange between two parties - call them alice and bob - and submitting it to a series of three mathematical alterations. let's say, for instance, that bob wants to send a message to alice. the problem is eve, an unwelcome snoop who is familiar with the way this particular scrambling system works, down to the mathematical formulas themselves - since these rules are, in this scenario, public knowledge.alice gets the ball rolling by generating a large number chosen at random. this, in effect, is a secret key that only she holds. now comes a crucial act suggested to ellis by project c43: alice, who is the intended recipient, actually initiates the scrambling process by executing a mathematical operation to transform the key to a new number. she sends the new number to bob.the new number is analogous to what we know as a public key. since an important property of the mathematical operation alice uses is that it cannot be calculated in reverse, even by an outside observer who has this second, nonsecret number, and also knows what function produced it, cannot do an inverse calculation to retrieve the first, secret number. this is something that will remain known only to the recipient, alice.now that bob has this nonsecret number, he uses a second operation to scramble the private message he has for alice, which he then sends. with a third mathematical function, alice uses her original, secret key to essentially strip the encryption from the message. she can now read the plain text, and eve can do nothing but gnash her teeth as she watches a very public exchange of what, to her, will remain gibberish.the nonsecret key acts like the line noise in project c43. since such keys wouldn't have to be protected, it would be possible to have secure communications without all the prior arrangements necessary in conventional crypto, opening the way for protected communications on a vast scale.ellis hadn't been assigned to unleash a revolution in cryptography, but the possibility that he had done so had to be dealt with. the very basis of the idea - its \"nonsecret\" element - seemed so heretical that, to some at the gchq, disproving his thesis would be striking a blow for the natural order of things. in july 1969, a draft of ellis's paper - which, naturally, was classified - was sent to the gchq's chief mathematician, shaun wylie. just before christmas, he delivered his judgment: \"unfortunately, i can't see anything wrong with this.\"however, the mathematician noted, ellis had presented only a proof that such a system could exist. the unknown remained: was there really a way of generating a nonsecret key from the original private key?to make it work, you needed to be certain that the eves of the world could not reverse the first mathematical process and get their hands on the key. ellis had conjectured a set of lookup tables that would perform the various scrambling and descrambling calculations but had not developed the specific functions. until they were formulated, nonsecret encryption would be nothing more than a theoretical curiosity. ellis did not hide this state of affairs when he formally wrote up his idea in a january 1970 internal paper called \"the possibility of secure non-secret digital encryption.\"clifford cocks realized that big primes were the key to public key.\"it is necessary to distinguish carefully between fact and opinion, i.e., between that which has actually been proved and that which seems likely,\" he wrote. \"it is particularly difficult to do this in this case because we have established something which, to most people, seems inherently impossible.\"the remaining step in the creation of a secure, nonsecret key was not trivial. even as he set about the search for the nonreversible functions that would make his scheme work, ellis, an engineer by training, was concerned that his mathematics skills were not up to the task. and despite the possible importance of a nonsecret system, the gchq did not assign much brainpower to aid him in the quest. at times over the next few years, some communications-electronics security group cryptographers would read ellis's paper and work for a while on potential solutions, and in 1971 a new chief scientist took an interest and assigned some people to the problem. but while those looking for the mystery functions developed ideas about what the characteristics of such things might be, they had no luck in actually finding one that worked.then clifford cocks came along.in 1973, cocks was a recent arrival in the electronics-security group. he had come to intelligence work from kings college, cambridge, where he earned an undergraduate degree in math, and oxford, where he did graduate work in number theory before deciding to move on. although cocks didn't know much about the gchq and really hadn't thought about cryptography as a focus of his work, he knew the agency needed mathematicians. also, a childhood friend, malcolm williamson, was already there. in september of that year, at age 22, cocks went to work in cheltenham.when people arrived at the gchq, they were assigned a mentor \"to teach you the ropes and tell you what you needed to know,\" cocks recalled in a recent lecture. his was nick patterson, another cambridge alumnus. one day at teatime, about two months after cocks's arrival, patterson mentioned ellis's idea to his prot\u00e9g\u00e9.\"nick explained it to me very mathematically, in terms of wanting a nonreversible function, with a property where you could encrypt and decrypt with the input of this function,\" cocks said during his lecture, adding that not reading ellis's paper before the conversation was an advantage. that allowed him to consider the problem without preconceptions. since he had done his research the previous year in number theory - working with large primes and multiplication - it made sense to him to use that knowledge. \"i suppose it was actually also helpful that i wasn't doing anything that evening,\" cocks added blithely.after work he walked back to the modest house he rented in cheltenham with williamson, ate dinner, and sat down to think. because of the secrecy imposed by the gchq, he had certain limitations: he could not bring anything home from his office, and if he pondered a work-related problem \"in digs,\" he was not permitted to write anything down. the only medium he had was his brain. \"happily,\" he said, \"the first idea seemed to work just fine.\"his idea was more than fine - it was elegant. \"if you wanted a function that couldn't be inverted,\" he now says, \"it seemed very natural to me to think of the concept of multiplying quite large prime numbers together.\"cocks is pointing to a basic mathematical truth: the product of two large prime numbers is extremely difficult to factor - that is, to reverse to obtain the original primes. he figured that the secret key in his implementation would be two huge primes, generated by a message recipient. the primes would be multiplied, and the product would be the nonsecret key, the number given openly to a sender (who could, if need be, also get the number from a public directory). cocks then figured out a simple mathematical formula that would allow the sender to encrypt a message in such a way that it could be decrypted only by someone who knows the original primes. \"this is very interesting,\" cocks remembers thinking. after mapping it out in his head, he went to sleep. \"i went back to work the next morning and wrote it down,\" he recalls.cocks, in one evening, had achieved a breakthrough that several years later would be repeated - in the form of the revolutionary rsa algorithm - after months of intensive trial and error by mit researchers ron rivest, adi shamir, and len adleman.malcolm williamson worried that such a \"simple\" scheme was vulnerable to attack.word got around the electronics-security group that someone had found a way to implement james ellis's idea. cocks mentioned to his friend malcolm williamson that he had an internal paper coming out. this was a one-up move; it was unusual for a recruit to circulate a paper so soon. cocks's announcement got williamson's attention; he listened closely as cocks explained the problem and his solution.williamson had known cocks since they were both 12 - they had attended the same grammar school in manchester, and they had both gone to cambridge. williamson had done graduate work at liverpool university, then one day saw an ad, posted by the gchq, calling for mathematicians. without knowing much about the agency, he had applied - and soon found himself working on cryptographic problems.williamson had not heard of the ellis problem before, but it struck him as rather unreasonable. how could you do cryptography when you passed the key in the open? so he set about to shoot down the concept, but he couldn't. \"i didn't manage to prove that there were any flaws in what he had,\" he recalls.but in the process, williamson began considering ways that two collaborating parties could pass numbers back and forth to build a shared key that would be secure even if an eavesdropper was monitoring every bit of the exchange. it was very late when he got it - 8 or 12 hours after he sat down to think. his scheme involved a complex set of exchanges in which each party picks a random number, performs a calculation on it by a difficult-to-reverse formula, and arrives at a shared key.it's indicative of the project's relative unimportance at the gchq that williamson didn't write up his work for a couple of months. not long after he did, and after some conversations with ellis, he came up with an idea that streamlined his concept. it was precisely the same formulation for what would later be known as the diffie-hellman algorithm. as far as williamson is concerned, though, it was pretty much a consequence of his first paper, so obvious that he felt in no hurry to circulate it. \"it really didn't feel like such a big step,\" he says.now the gchq had two means of implementing ellis's heresy. but just as the agency had been suspicious of the initial idea, it moved ultracautiously with cocks's and williamson's schemes. ironically, one factor weighing against accepting the solutions was their sheer straightforwardness. \"there's a basic principle that neat and tidy problems have neat and tidy solutions and messy problems don't have neat and tidy solutions,\" says williamson. \"most of cipher design is essentially messy; it's not neat and tidy and mathematical. so we're pretty comfortable that people are not going to be able to break those things, because even if you hack away at it, you're not going to suddenly find a little magic screw there that, if you unscrew it, everything falls to pieces. but in all this stuff with public key, there absolutely may be a magic screw. some graduate-student mathematician could really cause a disaster.\"so concerned was the gchq with this possibility that it not only looked at the schemes internally - finding no inherent flaws - but also took the unusual step in 1974 of going to a renowned outsider, professor r. f. churchhouse of the university of wales, presenting him with the mathematical foundation of cocks's idea, and asking whether it was secure. churchhouse concluded that as long as no one figured out a fast way of factoring huge primes - something that no mathematician had ever come close to - the scheme was sound.the agency ultimately determined that between the two methods, williamson's was preferable because its functions were easier to work with than the huge numbers cocks's scheme required. even so, the system was judged to be impractical. \"the machines that would be used were expensive and very slow,\" explains cocks. \"it took minutes to generate a key. we looked at the circumstances under which you would find it useful to have a machine that took that long to produce keys and immediately thought the applications were too limited to make it worth floating.\"so the gchq's thinking had advanced from judging nonsecret encryption to be impossible to finding it overly cumbersome. many people in the agency also remained concerned that such a radically new kind of cryptography might have weaknesses too subtle to detect, weaknesses that an enemy might use to crack the system.cocks's breakthrough was repeated, years later, after months of intensive effort at mit.even williamson believed that the whole venture was too risky. when he finally wrote up a revised version of his key scheme, he cited these reservations as the reason for the two-year delay. \"i find myself in an embarrassing position,\" he wrote. \"i have come to doubt the whole theory of nonsecret encryption. the trouble is that i have no proof that the method ... is genuinely secure.\" he conceded he could not find anything wrong with the system, though, \"and would be grateful if anyone else can.\" no one did. but by then the gchq had tacitly concluded it wasn't worth the effort to implement a public key crypto system.in 1976, of course, diffie and hellman presented their findings in two papers, which were followed in 1977 by a famous paper about rsa publicized by scientific american. these developments made a huge splash; the news even found its way into the popular press, and the public key discoverers were widely heralded. one can only imagine how weird this all must have been for ellis, cocks, and williamson, who could never, outside the walls of the gchq, even hint at what they knew about nonsecret encryption.cocks says that when ellis read diffie and hellman's first paper, which outlined the public key idea but suggested no implementation, he said simply, \"they're where i was in 1969.\" the stanford team's second paper did suggest a means of implementation - identical to the williamson solution. cocks had temporarily left the gchq for a stint at the ministry of defense and first learned of the americans' work in martin gardiner's scientific american column in mid-1977 - the one describing the rsa algorithm cocks had first discovered three years earlier. he says, with some understatement, \"i was surprised.\"in 1977, the british cryptographers were upset to learn that both stanford university and mit were planning to patent, respectively, the diffie-hellman and rsa algorithms. \"i tried to get them to block the us patent,\" williamson says. \"we could have done that, but in fact the people higher up didn't want to. patents are complicated.\" specifically, there was a question as to whether one could obtain a patent under british law for what was essentially a mathematical algorithm. \"the advice we received was, 'don't bother,'\" says cocks.that stance apparently condemned the intelligence establishment - in the uk, at least - to the role of bystander during the cryptographic revolution diffie and hellman had sparked. the gchq and the nsa would eventually come to take public key seriously, but they no longer held their crypto monopoly. a new community of cryptographers, not bound by government constraints or prejudices, quickly began a process of furious innovation that would transform cryptography from a tool of secrecy to a technology of privacy.chief among the developments that grew out of public key cryptography was the ability to authenticate message senders with digital signatures. there followed ideas for digital cash, including a system that preserved a spender's anonymity, just as with actual money. there were schemes for \"secret sharing,\" in which information is divided among several people in such a way that it can be recovered only by consent of a given percentage of the keyholders. there were digital-certificate systems that allowed identities to be verified online or through smartcards. there were systems for digital time-stamping, electronic receipts, and all sorts of ecommerce activities. as a result of these efforts, public key is now ubiquitous, on every copy of netscape and lotus notes - and may one day wind up in everyone's wallet as smartcards.it's easy to fault the intelligence community for not pursuing the development of nonsecret encryption, but from a national-security standpoint, its cautious approach was understandable. using an untried technique to protect government secrets posed a risk. one of nonsecret crypto's inventors still makes this point. \"the government has to be very cautious,\" says williamson. \"it's much more important to secure some of this stuff than, say, banking transactions or internet communications, or what the next-model ford is going to look like. if i were on the top of the pyramid then, would i have dared to implement it? what was the chance that somebody would find that magic screw that unlocks everything?\"in the final reckoning, nonsecret encryption was too much a departure from what was known. \"you've got to remember,\" says williamson, \"this is the civil service. i mean, this is something new and different. 'let's ignore it. let's sweep it under the carpet.'\"a quarter of a century after they did their big work, the british trio insist that they didn't feel shortchanged when they saw others get all the credit for ideas they had come up with themselves. \"ellis got internal recognition,\" says cocks, who himself is perfectly comfortable with his anonymity. \"you accept that. internal recognition is all you get.\"the uk intelligence establishment's stance of secrecy condemned it to a spectator role during the cryptographic revolution.of the three, only ellis took steps to bring his work to public attention. in 1987, he wrote a paper directed to outsiders outlining how he had hit on the idea of nonsecret encryption. for anyone thick enough to have missed his point, he closed the paper by noting it was \"some time after the basic work had been done\" that diffie and hellman made what he called the \"rediscovery of the nse techniques.\" but the gchq classified his account and kept it secret. williamson suggests release of the true story was held up by one official. the material was all ready to go, he says, but could not be published \"until a certain person retired.\"apparently, the \"certain person\" eventually left government service. in late 1997, the communications-electronics security group posted on its web site ellis's 1987 history along with the earlier papers he, cocks, and williamson had written. (the papers are available at www.cesg.gov.uk/about/nsecret.htm.) some weeks earlier, on november 25, james ellis had died.in 1979, national security agency chief bobby inman publicly stated that, all the noise about diffie-hellman and rsa aside, the intelligence establishment had known about public key cryptography for some time. to diffie, the suggestion that someone, somewhere had discovered public key before him had long been troublesome, and he tried to find out what inman meant. in the early '80s, he finally pried two names out of an nsa source: clifford cocks and james ellis of the gchq in cheltenham. at the time, diffie was employed by the research affiliate of canada's northern telecom. working through a couple of connected associates, he asked to meet with cocks and ellis. only ellis agreed.they met in the fall of 1982 - more than six years since ellis's discovery and almost a decade since diffie had independently come up with the same idea. ellis lived on a hill on cheltenham's outskirts and had a beautiful view of the town. he raised bees in the backyard. the gchq senior scientist was in his late 50s - a tall man, going gray. after some small talk with ellis and his wife, diffie and his fellow cryptographer headed for a pub.diffie turned to ellis as they pulled out of the driveway. \"tell me,\" he said, \"how you invented nonsecret encryption.\"\"who says i did?\" ellis asked.diffie said the name of his nsa source.\"do you work for him?\" asked ellis. diffie said he didn't. at the pub, as diffie got tipsy, ellis - a solid gchq man - talked about anything but the subject diffie most wanted to discuss. still, the meeting was the beginning of a long friendship between the diffie and ellis families. it was a relationship in which diffie's wife, mary fischer, sensed something wistful in a man who never got credit for his truly revolutionary insight.thinking back to their first meeting, diffie says that ellis made a telling statement, one whose very obliqueness speaks volumes about the world he lived in as a spy.the british spook said it on the way to the pub - a seemingly random confession that stood out in contrast to the polite evasions that were ellis's standard form of reply. public key cryptography? \"you did a lot more with it than we did,\" he said. then he said no more. the nonsecret secret would stay a secret for the rest of his life."}